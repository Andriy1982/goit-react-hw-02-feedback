{"version":3,"sources":["Section/SectionStyledComponent.js","Section/Section.js","Button/ButtonStyledComponent.js","Button/Button.js","FeedbackOptions/FeedbackOptionStyledComponent.js","FeedbackOptions/FeedbackOption.js","Notification/NotificationStyledComponent.js","Notification/Notification.js","Statistics/StatisticStyledComponent.js","Statistics/Statistic.js","App.js","index.js"],"names":["Container","styled","section","Title","h2","Section","title","children","ButtonFeedback","button","Button","name","callBack","type","onClick","div","FeedbackOption","options","onButtonClick","good","neutral","bad","defaultProps","Description","p","Notification","message","List","ul","ListItem","li","Statistic","this","props","feedbackTotal","feedbackPercentage","Component","App","state","handleButtonClick","e","target","setState","prevState","countTotalFeedback","Object","values","reduce","acc","item","countPositiveFeedbackPercentage","total","Math","round","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"mlBAEO,IAAMA,EAAYC,IAAOC,QAAV,KASTC,EAAQF,IAAOG,GAAV,KCMHC,EAbC,SAAC,GAAyB,IAAvBC,EAAsB,EAAtBA,MAAOC,EAAe,EAAfA,SACxB,OACE,eAACP,EAAD,WACE,cAACG,EAAD,UAAQG,IACPC,M,kXCNA,IAAMC,EAAiBP,IAAOQ,OAAV,KCaZC,MAXf,YAAoC,IAAlBC,EAAiB,EAAjBA,KAAMC,EAAW,EAAXA,SACpB,OACA,cAACJ,EAAD,CAAgBG,KAAQA,EAAME,KAAK,SAASC,QAAWF,EAAvD,SAAkED,K,2OCJ9D,IAAMX,EAAYC,IAAOc,IAAV,KAIQd,IAAOQ,OAAV,KCA5B,SAASO,EAAT,GAAqD,IAA3BC,EAA0B,EAA1BA,QAASC,EAAiB,EAAjBA,cAAiB,cACrBD,EADqB,GAC3CE,EAD2C,KACrCC,EADqC,KAC5BC,EAD4B,KAGlD,OACE,eAAC,EAAD,WACI,cAAC,EAAD,CAAQV,KAAQQ,EAAMP,SAAWM,IACjC,cAAC,EAAD,CAAQP,KAAQS,EAASR,SAAWM,IACpC,cAAC,EAAD,CAAQP,KAAQU,EAAKT,SAAWM,OAKxCF,EAAeM,aAAe,CAC5BL,QAAS,CAAC,OAAQ,UAAW,QAShBD,Q,8GC1BR,IAAMO,EAActB,IAAOuB,EAAV,KCExB,SAASC,EAAT,GAAkC,IAAXC,EAAU,EAAVA,QACnB,OACI,cAACH,EAAD,UACKG,IAKbD,EAAaH,aAAe,CACxBI,QAAS,qBAOED,Q,0SClBR,IAAMtB,EAAQF,IAAOG,GAAV,KAGLuB,EAAO1B,IAAO2B,GAAV,KAGJC,EAAW5B,IAAO6B,GAAV,KCFAC,E,uKAST,IAAD,EAOHC,KAAKC,MALPC,EAFK,EAELA,cACAC,EAHK,EAGLA,mBACAhB,EAJK,EAILA,KACAE,EALK,EAKLA,IACAD,EANK,EAMLA,QAEF,OACE,oCACE,cAAC,EAAD,yBACEc,EAGA,eAACP,EAAD,WACE,eAACE,EAAD,oBACQ,+BAAOV,OAEf,eAACU,EAAD,uBACW,+BAAOT,OAElB,eAACS,EAAD,mBACO,+BAAOR,OAEd,eAACQ,EAAD,qBACS,+BAAOK,OAEhB,eAACL,EAAD,iCACqB,iCAAOM,EAAP,cAhBvB,cAAC,EAAD,CAAcT,QAAQ,6B,GArBOU,aCAlBC,E,4MACnBC,MAAQ,CACNnB,KAAM,EACNC,QAAS,EACTC,IAAK,G,EAGPkB,kBAAoB,SAAAC,GAAM,IAChB7B,EAAS6B,EAAEC,OAAX9B,KACR,EAAK+B,UAAS,SAAAC,GACZ,OAAO,eAAGhC,EAAOgC,EAAUhC,GAAQ,O,EAIvCiC,mBAAqB,WACnB,OAAOC,OAAOC,OAAO,EAAKR,OAAOS,QAAO,SAACC,EAAKC,GAAN,OAAeD,EAAMC,IAAM,I,EAGrEC,gCAAkC,SAAAC,GAChC,OAAOC,KAAKC,MAAyB,IAAlB,EAAKf,MAAMnB,KAAcgC,I,uDAGpC,IAAD,EACwBnB,KAAKM,MAA5BnB,EADD,EACCA,KAAMC,EADP,EACOA,QAASC,EADhB,EACgBA,IACjBa,EAAgBF,KAAKY,qBACrBT,EAAqBH,KAAKkB,gCAC9BhB,GAEF,OACE,eAAC,EAAD,CAAS5B,MAAM,wBAAf,UACE,cAAC,EAAD,CACEW,QAAS,CAAC,OAAQ,UAAW,OAC7BC,cAAec,KAAKO,oBAEtB,cAAC,EAAD,CACEL,cAAeA,EACfC,mBAAoBA,EACpBhB,KAAMA,EACNC,QAASA,EACTC,IAAKA,W,GAvCkBe,aCFjCkB,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAGFC,SAASC,eAAe,W","file":"static/js/main.44c846a6.chunk.js","sourcesContent":["import styled from 'styled-components'\r\n\r\nexport const Container = styled.section`\r\nmax-width: 400px;\r\npadding: 10px;\r\n/* outline: 1px solid red; */\r\nmargin-left: auto;\r\nmargin-right:auto;\r\nfont-family: Helvetica, Arial, sans-serif;\r\n`;\r\n\r\nexport const Title = styled.h2`\r\nmargin: 0  0 20px 0;\r\nfont-size: 30px;\r\ntext-align: center;\r\n`","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport {Container, Title} from './SectionStyledComponent';\r\n\r\nconst Section = ({ title, children }) => {\r\n  return (\r\n    <Container>\r\n      <Title>{title}</Title>\r\n      {children}\r\n    </Container>\r\n  );\r\n};\r\n\r\nSection.propTypes = {\r\n  title: PropTypes.string.isRequired,\r\n};\r\n\r\nexport default Section;","import styled from 'styled-components';\r\n\r\nexport const ButtonFeedback = styled.button`\r\n  font-weight: 700;\r\n  font-size: 18px;\r\n  outline: none;\r\n  color: white;\r\n  padding: 10px;\r\n  border-radius: 3px;\r\n  border: none;\r\n  background: rgb(64, 199, 129);\r\n  box-shadow: 0 -3px rgb(53, 167, 110) inset;\r\n  cursor: pointer;\r\n\r\n  &:not(:last-child) {\r\n    margin-right: 10px;\r\n  }\r\n`\r\n","import React from 'react'\r\nimport PropTypes from 'prop-types';\r\nimport {ButtonFeedback} from './ButtonStyledComponent'\r\n\r\nfunction Button({ name, callBack}) {\r\n    return (\r\n    <ButtonFeedback name = {name} type=\"button\" onClick = {callBack}>{name}</ButtonFeedback>\r\n    )\r\n}\r\n\r\nButton.propTypes = {\r\n    name: PropTypes.string.isRequired,\r\n    callBack: PropTypes.func,\r\n};\r\n\r\nexport default Button;","import styled from 'styled-components';\r\n\r\nexport  const Container = styled.div`\r\ndisplay: flex;\r\njustify-content: center;\r\n`\r\nexport  const FeedbackButton = styled.button`\r\n&:not(::last-child) {\r\n    margin-right: 10px;\r\n}\r\n`","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport Button from \"../Button\"\r\nimport {Container} from \"./FeedbackOptionStyledComponent\";\r\n\r\n\r\nfunction FeedbackOption({ options, onButtonClick }) {\r\n  const [good, neutral, bad] = options;\r\n\r\n  return (\r\n    <Container>\r\n        <Button name = {good} callBack ={onButtonClick}/>\r\n        <Button name = {neutral} callBack ={onButtonClick}/>\r\n        <Button name = {bad} callBack ={onButtonClick}/>\r\n    </Container>\r\n  );\r\n}\r\n\r\nFeedbackOption.defaultProps = {\r\n  options: ['good', 'neutral', 'bad'],\r\n};\r\n\r\nFeedbackOption.propTypes = {\r\n  options: PropTypes.arrayOf(PropTypes.string),\r\n  onLeaveFeedback: PropTypes.func,\r\n};\r\n\r\n\r\nexport default FeedbackOption;","import styled from 'styled-components'\r\n\r\nexport const Description = styled.p`\r\nfont-size: 20px;\r\ntext-align: center;\r\n`","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport {Description} from './NotificationStyledComponent'\r\n\r\nfunction Notification({message}) {\r\n    return (\r\n        <Description>\r\n            {message}\r\n        </Description>\r\n    )\r\n}\r\n\r\nNotification.defaultProps = {\r\n    message: \"No feedback given\",\r\n};\r\n\r\nNotification.propTypes = {\r\n    message: PropTypes.string.isRequired,\r\n};\r\n\r\nexport default Notification;","import styled from 'styled-components'\r\n\r\nexport const Title = styled.h2`\r\ntext-align: center;\r\n`\r\nexport const List = styled.ul`\r\nfont-size: 20px;\r\n`\r\nexport const ListItem = styled.li`\r\n&:not(:last-child) {\r\nmargin-bottom: 5px;\r\n}\r\n`","import React, { Component } from 'react';\r\nimport Notification from '../Notification';\r\n\r\nimport PropTypes from 'prop-types';\r\nimport { List, Title, ListItem } from './StatisticStyledComponent';\r\n\r\nexport default class Statistic extends Component {\r\n  static propTypes = {\r\n    feedbackTotal: PropTypes.number.isRequired,\r\n    feedbackPercentage: PropTypes.number.isRequired,\r\n    good: PropTypes.number.isRequired,\r\n    neutral: PropTypes.number.isRequired,\r\n    bad: PropTypes.number.isRequired,\r\n  };\r\n\r\n  render() {\r\n    const {\r\n      feedbackTotal,\r\n      feedbackPercentage,\r\n      good,\r\n      bad,\r\n      neutral,\r\n    } = this.props;\r\n    return (\r\n      <section>\r\n        <Title>Statistics</Title>\r\n        {!feedbackTotal ? (\r\n          <Notification message=\"No feedback given\" />\r\n        ) : (\r\n          <List>\r\n            <ListItem>\r\n              Good: <span>{good}</span>\r\n            </ListItem>\r\n            <ListItem>\r\n              Neutral: <span>{neutral}</span>\r\n            </ListItem>\r\n            <ListItem>\r\n              Bad: <span>{bad}</span>\r\n            </ListItem>\r\n            <ListItem>\r\n              Total: <span>{feedbackTotal}</span>\r\n            </ListItem>\r\n            <ListItem>\r\n              Positive feedback: <span>{feedbackPercentage} %</span>\r\n            </ListItem>\r\n          </List>\r\n        )}\r\n      </section>\r\n    );\r\n  }\r\n}\r\n","import React, { Component } from 'react';\r\n\r\nimport Section from './Section';\r\nimport FeedbackOption from './FeedbackOptions';\r\nimport Statistics from './Statistics';\r\n\r\nexport default class App extends Component {\r\n  state = {\r\n    good: 0,\r\n    neutral: 0,\r\n    bad: 0,\r\n  };\r\n\r\n  handleButtonClick = e => {\r\n    const { name } = e.target;\r\n    this.setState(prevState => {\r\n      return { [name]: prevState[name] + 1 };\r\n    });\r\n  };\r\n\r\n  countTotalFeedback = () => {\r\n    return Object.values(this.state).reduce((acc, item) => acc + item, 0);\r\n  };\r\n\r\n  countPositiveFeedbackPercentage = total => {\r\n    return Math.round((this.state.good * 100) / total);\r\n  };\r\n\r\n  render() {\r\n    const { good, neutral, bad } = this.state;\r\n    const feedbackTotal = this.countTotalFeedback();\r\n    const feedbackPercentage = this.countPositiveFeedbackPercentage(\r\n      feedbackTotal,\r\n    );\r\n    return (\r\n      <Section title=\"Please leave feedback\">\r\n        <FeedbackOption\r\n          options={['good', 'neutral', 'bad']}\r\n          onButtonClick={this.handleButtonClick}\r\n        />\r\n        <Statistics\r\n          feedbackTotal={feedbackTotal}\r\n          feedbackPercentage={feedbackPercentage}\r\n          good={good}\r\n          neutral={neutral}\r\n          bad={bad}\r\n        />\r\n      </Section>\r\n    );\r\n  }\r\n}\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>\n  ,\n  document.getElementById('root')\n);"],"sourceRoot":""}